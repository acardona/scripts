from org.objectweb.asm import ClassWriter, Opcodes, Label
from lib.asm import CustomClassLoader
from java.lang import Integer, Double, Object

def createNativeConstellationPlusClass(classloader=None):
  cw = ClassWriter(0)
  
  cw.visit(52, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER, "my/ConstellationPlus", None, "java/lang/Object", None)
  
  
  fv = cw.visitField(Opcodes.ACC_PRIVATE + Opcodes.ACC_FINAL, "angles", "[D", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_PRIVATE + Opcodes.ACC_FINAL, "lengths", "[D", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL, "position", "Lmpicbg/models/Point;", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_STATIC, "COMPARE_ANGLES", "I", None, Integer(1))
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_STATIC, "COMPARE_LENGTHS", "I", None, Integer(2))
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_STATIC, "COMPARE_ALL", "I", None, Integer(3))
  fv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC, "<init>", "([D[D[D)V", None, None)
  mv.visitCode()
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/lang/Object", "<init>", "()V", False)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/ConstellationPlus", "angles", "[D")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/ConstellationPlus", "lengths", "[D")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitTypeInsn(Opcodes.NEW, "mpicbg/models/Point")
  mv.visitInsn(Opcodes.DUP)
  mv.visitVarInsn(Opcodes.ALOAD, 3)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "mpicbg/models/Point", "<init>", "([D)V", False)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/ConstellationPlus", "position", "Lmpicbg/models/Point;")
  mv.visitInsn(Opcodes.RETURN)
  mv.visitMaxs(4, 4)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL, "matches", "(Lmy/ConstellationPlus;DDI)Z", None, None)
  mv.visitCode()
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "lengths", "[D")
  mv.visitInsn(Opcodes.ARRAYLENGTH)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "lengths", "[D")
  mv.visitInsn(Opcodes.ARRAYLENGTH)
  l0 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPEQ, l0)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitInsn(Opcodes.IRETURN)
  mv.visitLabel(l0)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitVarInsn(Opcodes.ILOAD, 6)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitInsn(Opcodes.IAND)
  l1 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPNE, l1)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitVarInsn(Opcodes.ISTORE, 7)
  l2 = Label()
  mv.visitLabel(l2)
  mv.visitFrame(Opcodes.F_APPEND,1, [Opcodes.INTEGER], 0, None)
  mv.visitVarInsn(Opcodes.ILOAD, 7)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "angles", "[D")
  mv.visitInsn(Opcodes.ARRAYLENGTH)
  mv.visitJumpInsn(Opcodes.IF_ICMPGE, l1)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "angles", "[D")
  mv.visitVarInsn(Opcodes.ILOAD, 7)
  mv.visitInsn(Opcodes.DALOAD)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "angles", "[D")
  mv.visitVarInsn(Opcodes.ILOAD, 7)
  mv.visitInsn(Opcodes.DALOAD)
  mv.visitInsn(Opcodes.DSUB)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "java/lang/Math", "abs", "(D)D", False)
  mv.visitVarInsn(Opcodes.DLOAD, 2)
  mv.visitInsn(Opcodes.DCMPL)
  l3 = Label()
  mv.visitJumpInsn(Opcodes.IFLE, l3)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitInsn(Opcodes.IRETURN)
  mv.visitLabel(l3)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitIincInsn(7, 1)
  mv.visitJumpInsn(Opcodes.GOTO, l2)
  mv.visitLabel(l1)
  mv.visitFrame(Opcodes.F_CHOP,1, None, 0, None)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitVarInsn(Opcodes.ILOAD, 6)
  mv.visitInsn(Opcodes.ICONST_2)
  mv.visitInsn(Opcodes.IAND)
  l4 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPNE, l4)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitVarInsn(Opcodes.ISTORE, 7)
  l5 = Label()
  mv.visitLabel(l5)
  mv.visitFrame(Opcodes.F_APPEND,1, [Opcodes.INTEGER], 0, None)
  mv.visitVarInsn(Opcodes.ILOAD, 7)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "lengths", "[D")
  mv.visitInsn(Opcodes.ARRAYLENGTH)
  mv.visitJumpInsn(Opcodes.IF_ICMPGE, l4)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "lengths", "[D")
  mv.visitVarInsn(Opcodes.ILOAD, 7)
  mv.visitInsn(Opcodes.DALOAD)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "lengths", "[D")
  mv.visitVarInsn(Opcodes.ILOAD, 7)
  mv.visitInsn(Opcodes.DALOAD)
  mv.visitInsn(Opcodes.DSUB)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "java/lang/Math", "abs", "(D)D", False)
  mv.visitVarInsn(Opcodes.DLOAD, 4)
  mv.visitInsn(Opcodes.DCMPL)
  l6 = Label()
  mv.visitJumpInsn(Opcodes.IFLE, l6)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitInsn(Opcodes.IRETURN)
  mv.visitLabel(l6)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitIincInsn(7, 1)
  mv.visitJumpInsn(Opcodes.GOTO, l5)
  mv.visitLabel(l4)
  mv.visitFrame(Opcodes.F_CHOP,1, None, 0, None)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitInsn(Opcodes.IRETURN)
  mv.visitMaxs(4, 8)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PRIVATE + Opcodes.ACC_FINAL + Opcodes.ACC_STATIC, "computeAngle", "(DDDDDDDD)D", None, None)
  mv.visitCode()
  mv.visitVarInsn(Opcodes.DLOAD, 6)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "java/lang/Math", "sqrt", "(D)D", False)
  mv.visitVarInsn(Opcodes.DSTORE, 16)
  mv.visitVarInsn(Opcodes.DLOAD, 14)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "java/lang/Math", "sqrt", "(D)D", False)
  mv.visitVarInsn(Opcodes.DSTORE, 18)
  mv.visitVarInsn(Opcodes.DLOAD, 0)
  mv.visitVarInsn(Opcodes.DLOAD, 8)
  mv.visitInsn(Opcodes.DMUL)
  mv.visitVarInsn(Opcodes.DLOAD, 2)
  mv.visitVarInsn(Opcodes.DLOAD, 10)
  mv.visitInsn(Opcodes.DMUL)
  mv.visitInsn(Opcodes.DADD)
  mv.visitVarInsn(Opcodes.DLOAD, 4)
  mv.visitVarInsn(Opcodes.DLOAD, 12)
  mv.visitInsn(Opcodes.DMUL)
  mv.visitInsn(Opcodes.DADD)
  mv.visitVarInsn(Opcodes.DSTORE, 20)
  mv.visitVarInsn(Opcodes.DLOAD, 20)
  mv.visitVarInsn(Opcodes.DLOAD, 16)
  mv.visitVarInsn(Opcodes.DLOAD, 18)
  mv.visitInsn(Opcodes.DMUL)
  mv.visitInsn(Opcodes.DDIV)
  mv.visitVarInsn(Opcodes.DSTORE, 22)
  mv.visitVarInsn(Opcodes.DLOAD, 22)
  mv.visitInsn(Opcodes.DCONST_1)
  mv.visitInsn(Opcodes.DCMPL)
  l0 = Label()
  mv.visitJumpInsn(Opcodes.IFLE, l0)
  mv.visitInsn(Opcodes.DCONST_1)
  l1 = Label()
  mv.visitJumpInsn(Opcodes.GOTO, l1)
  mv.visitLabel(l0)
  mv.visitFrame(Opcodes.F_FULL, 12, [Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE], 0, [])
  mv.visitVarInsn(Opcodes.DLOAD, 22)
  mv.visitLdcInsn(Double("-1.0"))
  mv.visitInsn(Opcodes.DCMPG)
  l2 = Label()
  mv.visitJumpInsn(Opcodes.IFGE, l2)
  mv.visitLdcInsn(Double("-1.0"))
  mv.visitJumpInsn(Opcodes.GOTO, l1)
  mv.visitLabel(l2)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitVarInsn(Opcodes.DLOAD, 22)
  mv.visitLabel(l1)
  mv.visitFrame(Opcodes.F_SAME1, 0, None, 1, [Opcodes.DOUBLE])
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "java/lang/Math", "acos", "(D)D", False)
  mv.visitInsn(Opcodes.DRETURN)
  mv.visitMaxs(6, 24)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_STATIC, "extractFeatures", "(Ljava/util/List;Lnet/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree;DIII)Ljava/util/List;", "(Ljava/util/List<Lnet/imglib2/RealLocalizable;>;Lnet/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree<Lnet/imglib2/RealLocalizable;>;DIII)Ljava/util/List<Lmy/ConstellationPlus;>;", None)
  mv.visitCode()
  mv.visitTypeInsn(Opcodes.NEW, "java/util/ArrayList")
  mv.visitInsn(Opcodes.DUP)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", False)
  mv.visitVarInsn(Opcodes.ASTORE, 7)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", True)
  mv.visitVarInsn(Opcodes.ASTORE, 8)
  l0 = Label()
  mv.visitLabel(l0)
  mv.visitFrame(Opcodes.F_APPEND,2, ["java/util/List", "java/util/Iterator"], 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 8)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", True)
  l1 = Label()
  mv.visitJumpInsn(Opcodes.IFEQ, l1)
  mv.visitVarInsn(Opcodes.ALOAD, 8)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", True)
  mv.visitTypeInsn(Opcodes.CHECKCAST, "net/imglib2/RealLocalizable")
  mv.visitVarInsn(Opcodes.ASTORE, 9)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitVarInsn(Opcodes.ALOAD, 9)
  mv.visitVarInsn(Opcodes.DLOAD, 2)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", "search", "(Lnet/imglib2/RealLocalizable;DZ)V", False)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", "numNeighbors", "()I", False)
  mv.visitVarInsn(Opcodes.ISTORE, 10)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitVarInsn(Opcodes.ISTORE, 11)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", False)
  mv.visitVarInsn(Opcodes.ILOAD, 10)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", False)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "com/google/common/collect/Range", "closedOpen", "(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/google/common/collect/Range;", False)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "com/google/common/collect/DiscreteDomain", "integers", "()Lcom/google/common/collect/DiscreteDomain;", False)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "com/google/common/collect/ContiguousSet", "create", "(Lcom/google/common/collect/Range;Lcom/google/common/collect/DiscreteDomain;)Lcom/google/common/collect/ContiguousSet;", False)
  mv.visitVarInsn(Opcodes.ASTORE, 12)
  mv.visitInsn(Opcodes.ICONST_2)
  mv.visitVarInsn(Opcodes.ILOAD, 5)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "java/lang/Math", "max", "(II)I", False)
  mv.visitVarInsn(Opcodes.ISTORE, 13)
  l2 = Label()
  mv.visitLabel(l2)
  mv.visitFrame(Opcodes.F_FULL, 13, ["java/util/List", "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", Opcodes.DOUBLE, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/util/List", "java/util/Iterator", "net/imglib2/RealLocalizable", Opcodes.INTEGER, Opcodes.INTEGER, "java/util/Set", Opcodes.INTEGER], 0, [])
  mv.visitVarInsn(Opcodes.ILOAD, 13)
  mv.visitVarInsn(Opcodes.ILOAD, 6)
  l3 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPGT, l3)
  mv.visitVarInsn(Opcodes.ILOAD, 13)
  mv.visitVarInsn(Opcodes.ILOAD, 10)
  mv.visitJumpInsn(Opcodes.IF_ICMPGE, l3)
  mv.visitVarInsn(Opcodes.ALOAD, 12)
  mv.visitVarInsn(Opcodes.ILOAD, 13)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "com/google/common/collect/Sets", "combinations", "(Ljava/util/Set;I)Ljava/util/Set;", False)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", True)
  mv.visitVarInsn(Opcodes.ASTORE, 14)
  l4 = Label()
  mv.visitLabel(l4)
  mv.visitFrame(Opcodes.F_APPEND,1, ["java/util/Iterator"], 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 14)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", True)
  l5 = Label()
  mv.visitJumpInsn(Opcodes.IFEQ, l5)
  mv.visitVarInsn(Opcodes.ALOAD, 14)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", True)
  mv.visitTypeInsn(Opcodes.CHECKCAST, "java/util/Set")
  mv.visitVarInsn(Opcodes.ASTORE, 15)
  mv.visitVarInsn(Opcodes.ILOAD, 13)
  mv.visitTypeInsn(Opcodes.ANEWARRAY, "net/imglib2/RealLocalizable")
  mv.visitVarInsn(Opcodes.ASTORE, 16)
  mv.visitVarInsn(Opcodes.ILOAD, 13)
  mv.visitIntInsn(Opcodes.NEWARRAY, Opcodes.T_DOUBLE)
  mv.visitVarInsn(Opcodes.ASTORE, 17)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitVarInsn(Opcodes.ISTORE, 18)
  mv.visitVarInsn(Opcodes.ALOAD, 15)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", True)
  mv.visitVarInsn(Opcodes.ASTORE, 19)
  l6 = Label()
  mv.visitLabel(l6)
  mv.visitFrame(Opcodes.F_FULL, 19, ["java/util/List", "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", Opcodes.DOUBLE, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/util/List", "java/util/Iterator", "net/imglib2/RealLocalizable", Opcodes.INTEGER, Opcodes.INTEGER, "java/util/Set", Opcodes.INTEGER, "java/util/Iterator", "java/util/Set", "[Lnet/imglib2/RealLocalizable;", "[D", Opcodes.INTEGER, "java/util/Iterator"], 0, [])
  mv.visitVarInsn(Opcodes.ALOAD, 19)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", True)
  l7 = Label()
  mv.visitJumpInsn(Opcodes.IFEQ, l7)
  mv.visitVarInsn(Opcodes.ALOAD, 19)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", True)
  mv.visitTypeInsn(Opcodes.CHECKCAST, "java/lang/Integer")
  mv.visitVarInsn(Opcodes.ASTORE, 20)
  mv.visitVarInsn(Opcodes.ALOAD, 16)
  mv.visitVarInsn(Opcodes.ILOAD, 18)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitVarInsn(Opcodes.ALOAD, 20)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", False)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", "getPosition", "(I)Lnet/imglib2/RealLocalizable;", False)
  mv.visitInsn(Opcodes.AASTORE)
  mv.visitVarInsn(Opcodes.ALOAD, 17)
  mv.visitVarInsn(Opcodes.ILOAD, 18)
  mv.visitIincInsn(18, 1)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitVarInsn(Opcodes.ALOAD, 20)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", False)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", "getSquareDistance", "(I)D", False)
  mv.visitInsn(Opcodes.DASTORE)
  mv.visitJumpInsn(Opcodes.GOTO, l6)
  mv.visitLabel(l7)
  mv.visitFrame(Opcodes.F_CHOP,1, None, 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 7)
  mv.visitVarInsn(Opcodes.ALOAD, 9)
  mv.visitVarInsn(Opcodes.ALOAD, 16)
  mv.visitVarInsn(Opcodes.ALOAD, 17)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "my/ConstellationPlus", "fromSearch", "(Lnet/imglib2/RealLocalizable;[Lnet/imglib2/RealLocalizable;[D)Lmy/ConstellationPlus;", False)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", True)
  mv.visitInsn(Opcodes.POP)
  mv.visitIincInsn(11, 1)
  mv.visitVarInsn(Opcodes.ILOAD, 11)
  mv.visitVarInsn(Opcodes.ILOAD, 4)
  l8 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPNE, l8)
  mv.visitJumpInsn(Opcodes.GOTO, l5)
  mv.visitLabel(l8)
  mv.visitFrame(Opcodes.F_FULL, 14, ["java/util/List", "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", Opcodes.DOUBLE, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/util/List", "java/util/Iterator", "net/imglib2/RealLocalizable", Opcodes.INTEGER, Opcodes.INTEGER, "java/util/Set", Opcodes.INTEGER, "java/util/Iterator"], 0, [])
  mv.visitJumpInsn(Opcodes.GOTO, l4)
  mv.visitLabel(l5)
  mv.visitFrame(Opcodes.F_CHOP,1, None, 0, None)
  mv.visitVarInsn(Opcodes.ILOAD, 11)
  mv.visitVarInsn(Opcodes.ILOAD, 4)
  l9 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPNE, l9)
  mv.visitJumpInsn(Opcodes.GOTO, l3)
  mv.visitLabel(l9)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitIincInsn(13, 1)
  mv.visitJumpInsn(Opcodes.GOTO, l2)
  mv.visitLabel(l3)
  mv.visitFrame(Opcodes.F_FULL, 8, ["java/util/List", "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", Opcodes.DOUBLE, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/util/List", "java/util/Iterator"], 0, [])
  mv.visitJumpInsn(Opcodes.GOTO, l0)
  mv.visitLabel(l1)
  mv.visitFrame(Opcodes.F_CHOP,1, None, 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 7)
  mv.visitInsn(Opcodes.ARETURN)
  mv.visitMaxs(5, 21)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_STATIC, "fromSearch", "(Lnet/imglib2/RealLocalizable;[Lnet/imglib2/RealLocalizable;[D)Lmy/ConstellationPlus;", None, None)
  mv.visitCode()
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "net/imglib2/RealLocalizable", "getFloatPosition", "(I)F", True)
  mv.visitInsn(Opcodes.F2D)
  mv.visitVarInsn(Opcodes.DSTORE, 3)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "net/imglib2/RealLocalizable", "getFloatPosition", "(I)F", True)
  mv.visitInsn(Opcodes.F2D)
  mv.visitVarInsn(Opcodes.DSTORE, 5)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitInsn(Opcodes.ICONST_2)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "net/imglib2/RealLocalizable", "getFloatPosition", "(I)F", True)
  mv.visitInsn(Opcodes.F2D)
  mv.visitVarInsn(Opcodes.DSTORE, 7)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitVarInsn(Opcodes.ISTORE, 9)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitInsn(Opcodes.ARRAYLENGTH)
  l0 = Label()
  l1 = Label()
  l2 = Label()
  l3 = Label()
  l4 = Label()
  l5 = Label()
  mv.visitTableSwitchInsn(2, 6, l5, [ l0, l1, l2, l3, l4 ])
  mv.visitLabel(l0)
  mv.visitFrame(Opcodes.F_FULL, 7, ["net/imglib2/RealLocalizable", "[Lnet/imglib2/RealLocalizable;", "[D", Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.INTEGER], 0, [])
  mv.visitInsn(Opcodes.ICONST_2)
  mv.visitVarInsn(Opcodes.ISTORE, 9)
  l6 = Label()
  mv.visitJumpInsn(Opcodes.GOTO, l6)
  mv.visitLabel(l1)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitInsn(Opcodes.ICONST_3)
  mv.visitVarInsn(Opcodes.ISTORE, 9)
  mv.visitJumpInsn(Opcodes.GOTO, l6)
  mv.visitLabel(l2)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitIntInsn(Opcodes.BIPUSH, 6)
  mv.visitVarInsn(Opcodes.ISTORE, 9)
  mv.visitJumpInsn(Opcodes.GOTO, l6)
  mv.visitLabel(l3)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitIntInsn(Opcodes.BIPUSH, 10)
  mv.visitVarInsn(Opcodes.ISTORE, 9)
  mv.visitJumpInsn(Opcodes.GOTO, l6)
  mv.visitLabel(l4)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitIntInsn(Opcodes.BIPUSH, 15)
  mv.visitVarInsn(Opcodes.ISTORE, 9)
  mv.visitJumpInsn(Opcodes.GOTO, l6)
  mv.visitLabel(l5)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitInsn(Opcodes.ICONST_2)
  mv.visitVarInsn(Opcodes.ISTORE, 10)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitInsn(Opcodes.ARRAYLENGTH)
  mv.visitVarInsn(Opcodes.ISTORE, 11)
  l7 = Label()
  mv.visitLabel(l7)
  mv.visitFrame(Opcodes.F_APPEND,2, [Opcodes.INTEGER, Opcodes.INTEGER], 0, None)
  mv.visitVarInsn(Opcodes.ILOAD, 11)
  mv.visitInsn(Opcodes.ICONST_2)
  l8 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPLE, l8)
  mv.visitVarInsn(Opcodes.ILOAD, 10)
  mv.visitVarInsn(Opcodes.ILOAD, 11)
  mv.visitInsn(Opcodes.IMUL)
  mv.visitVarInsn(Opcodes.ISTORE, 10)
  mv.visitIincInsn(11, -1)
  mv.visitJumpInsn(Opcodes.GOTO, l7)
  mv.visitLabel(l8)
  mv.visitFrame(Opcodes.F_CHOP,1, None, 0, None)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitVarInsn(Opcodes.ISTORE, 11)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitInsn(Opcodes.ARRAYLENGTH)
  mv.visitInsn(Opcodes.ICONST_2)
  mv.visitInsn(Opcodes.ISUB)
  mv.visitVarInsn(Opcodes.ISTORE, 12)
  l9 = Label()
  mv.visitLabel(l9)
  mv.visitFrame(Opcodes.F_APPEND,2, [Opcodes.INTEGER, Opcodes.INTEGER], 0, None)
  mv.visitVarInsn(Opcodes.ILOAD, 12)
  mv.visitInsn(Opcodes.ICONST_1)
  l10 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPLE, l10)
  mv.visitVarInsn(Opcodes.ILOAD, 11)
  mv.visitVarInsn(Opcodes.ILOAD, 12)
  mv.visitInsn(Opcodes.IMUL)
  mv.visitVarInsn(Opcodes.ISTORE, 11)
  mv.visitIincInsn(12, -1)
  mv.visitJumpInsn(Opcodes.GOTO, l9)
  mv.visitLabel(l10)
  mv.visitFrame(Opcodes.F_CHOP,1, None, 0, None)
  mv.visitVarInsn(Opcodes.ILOAD, 10)
  mv.visitVarInsn(Opcodes.ILOAD, 11)
  mv.visitInsn(Opcodes.ICONST_2)
  mv.visitInsn(Opcodes.IMUL)
  mv.visitInsn(Opcodes.IDIV)
  mv.visitVarInsn(Opcodes.ISTORE, 9)
  mv.visitLabel(l6)
  mv.visitFrame(Opcodes.F_CHOP,2, None, 0, None)
  mv.visitVarInsn(Opcodes.ILOAD, 9)
  mv.visitIntInsn(Opcodes.NEWARRAY, Opcodes.T_DOUBLE)
  mv.visitVarInsn(Opcodes.ASTORE, 10)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitVarInsn(Opcodes.ISTORE, 11)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitVarInsn(Opcodes.ISTORE, 12)
  l11 = Label()
  mv.visitLabel(l11)
  mv.visitFrame(Opcodes.F_APPEND,3, ["[D", Opcodes.INTEGER, Opcodes.INTEGER], 0, None)
  mv.visitVarInsn(Opcodes.ILOAD, 11)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitInsn(Opcodes.ARRAYLENGTH)
  l12 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPGE, l12)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitVarInsn(Opcodes.ILOAD, 11)
  mv.visitInsn(Opcodes.AALOAD)
  mv.visitVarInsn(Opcodes.ASTORE, 13)
  mv.visitVarInsn(Opcodes.ILOAD, 11)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitInsn(Opcodes.IADD)
  mv.visitVarInsn(Opcodes.ISTORE, 14)
  l13 = Label()
  mv.visitLabel(l13)
  mv.visitFrame(Opcodes.F_APPEND,2, ["net/imglib2/RealLocalizable", Opcodes.INTEGER], 0, None)
  mv.visitVarInsn(Opcodes.ILOAD, 14)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitInsn(Opcodes.ARRAYLENGTH)
  l14 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPGE, l14)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitVarInsn(Opcodes.ILOAD, 14)
  mv.visitInsn(Opcodes.AALOAD)
  mv.visitVarInsn(Opcodes.ASTORE, 15)
  mv.visitVarInsn(Opcodes.ALOAD, 10)
  mv.visitVarInsn(Opcodes.ILOAD, 12)
  mv.visitIincInsn(12, 1)
  mv.visitVarInsn(Opcodes.ALOAD, 13)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "net/imglib2/RealLocalizable", "getFloatPosition", "(I)F", True)
  mv.visitInsn(Opcodes.F2D)
  mv.visitVarInsn(Opcodes.DLOAD, 3)
  mv.visitInsn(Opcodes.DSUB)
  mv.visitVarInsn(Opcodes.ALOAD, 13)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "net/imglib2/RealLocalizable", "getFloatPosition", "(I)F", True)
  mv.visitInsn(Opcodes.F2D)
  mv.visitVarInsn(Opcodes.DLOAD, 5)
  mv.visitInsn(Opcodes.DSUB)
  mv.visitVarInsn(Opcodes.ALOAD, 13)
  mv.visitInsn(Opcodes.ICONST_2)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "net/imglib2/RealLocalizable", "getFloatPosition", "(I)F", True)
  mv.visitInsn(Opcodes.F2D)
  mv.visitVarInsn(Opcodes.DLOAD, 7)
  mv.visitInsn(Opcodes.DSUB)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitVarInsn(Opcodes.ILOAD, 11)
  mv.visitInsn(Opcodes.DALOAD)
  mv.visitVarInsn(Opcodes.ALOAD, 15)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "net/imglib2/RealLocalizable", "getFloatPosition", "(I)F", True)
  mv.visitInsn(Opcodes.F2D)
  mv.visitVarInsn(Opcodes.DLOAD, 3)
  mv.visitInsn(Opcodes.DSUB)
  mv.visitVarInsn(Opcodes.ALOAD, 15)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "net/imglib2/RealLocalizable", "getFloatPosition", "(I)F", True)
  mv.visitInsn(Opcodes.F2D)
  mv.visitVarInsn(Opcodes.DLOAD, 5)
  mv.visitInsn(Opcodes.DSUB)
  mv.visitVarInsn(Opcodes.ALOAD, 15)
  mv.visitInsn(Opcodes.ICONST_2)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "net/imglib2/RealLocalizable", "getFloatPosition", "(I)F", True)
  mv.visitInsn(Opcodes.F2D)
  mv.visitVarInsn(Opcodes.DLOAD, 7)
  mv.visitInsn(Opcodes.DSUB)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitVarInsn(Opcodes.ILOAD, 14)
  mv.visitInsn(Opcodes.DALOAD)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "my/ConstellationPlus", "computeAngle", "(DDDDDDDD)D", False)
  mv.visitInsn(Opcodes.DASTORE)
  mv.visitIincInsn(14, 1)
  mv.visitJumpInsn(Opcodes.GOTO, l13)
  mv.visitLabel(l14)
  mv.visitFrame(Opcodes.F_CHOP,2, None, 0, None)
  mv.visitIincInsn(11, 1)
  mv.visitJumpInsn(Opcodes.GOTO, l11)
  mv.visitLabel(l12)
  mv.visitFrame(Opcodes.F_CHOP,2, None, 0, None)
  mv.visitTypeInsn(Opcodes.NEW, "my/ConstellationPlus")
  mv.visitInsn(Opcodes.DUP)
  mv.visitVarInsn(Opcodes.ALOAD, 10)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitInsn(Opcodes.ICONST_3)
  mv.visitIntInsn(Opcodes.NEWARRAY, Opcodes.T_DOUBLE)
  mv.visitInsn(Opcodes.DUP)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitVarInsn(Opcodes.DLOAD, 3)
  mv.visitInsn(Opcodes.DASTORE)
  mv.visitInsn(Opcodes.DUP)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitVarInsn(Opcodes.DLOAD, 5)
  mv.visitInsn(Opcodes.DASTORE)
  mv.visitInsn(Opcodes.DUP)
  mv.visitInsn(Opcodes.ICONST_2)
  mv.visitVarInsn(Opcodes.DLOAD, 7)
  mv.visitInsn(Opcodes.DASTORE)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "my/ConstellationPlus", "<init>", "([D[D[D)V", False)
  mv.visitInsn(Opcodes.ARETURN)
  mv.visitMaxs(18, 16)
  mv.visitEnd()
  
  cw.visitEnd()

  
  if not classloader:
    classloader = CustomClassLoader()

  return classloader.defineClass("my/ConstellationPlus", cw.toByteArray())



def createNativePointMatchesPlusClass(classloader=None):
  if not classloader:
    classloader = CustomClassLoader()

  # First define subclasses, then the outer class

  # subclass 1
  cw = ClassWriter(0)
  
  cw.visit(52, Opcodes.ACC_FINAL + Opcodes.ACC_SUPER, "my/PointMatchesPlus_1", "Ljava/lang/Object;Ljava/util/concurrent/Callable<Ljava/util/ArrayList<Lmpicbg/models/PointMatch;>;>;", "java/lang/Object", [ "java/util/concurrent/Callable" ])
  
  cw.visitOuterClass("my/PointMatchesPlus", "fromFeatures", "(Ljava/util/List;Ljava/util/List;DDII)Lmy/PointMatchesPlus;")
  
  cw.visitInnerClass("my/PointMatchesPlus_1", None, None, Opcodes.ACC_STATIC)
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$features1", "Ljava/util/List;", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$offset", "I", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$inc", "I", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$features2", "Ljava/util/List;", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$angle_epsilon", "D", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$len_epsilon_sq", "D", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$comparison_type", "I", None, None)
  fv.visitEnd()
  
  
  mv = cw.visitMethod(0, "<init>", "(Ljava/util/List;IILjava/util/List;DDI)V", None, None)
  mv.visitCode()
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_1", "val$features1", "Ljava/util/List;")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ILOAD, 2)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_1", "val$offset", "I")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ILOAD, 3)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_1", "val$inc", "I")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ALOAD, 4)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_1", "val$features2", "Ljava/util/List;")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.DLOAD, 5)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_1", "val$angle_epsilon", "D")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.DLOAD, 7)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_1", "val$len_epsilon_sq", "D")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ILOAD, 9)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_1", "val$comparison_type", "I")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/lang/Object", "<init>", "()V", False)
  mv.visitInsn(Opcodes.RETURN)
  mv.visitMaxs(3, 10)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL, "call", "()Ljava/util/ArrayList;", "()Ljava/util/ArrayList<Lmpicbg/models/PointMatch;>;", None)
  mv.visitCode()
  mv.visitTypeInsn(Opcodes.NEW, "java/util/ArrayList")
  mv.visitInsn(Opcodes.DUP)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", False)
  mv.visitVarInsn(Opcodes.ASTORE, 1)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_1", "val$features1", "Ljava/util/List;")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_1", "val$offset", "I")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_1", "val$offset", "I")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_1", "val$inc", "I")
  mv.visitInsn(Opcodes.IADD)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_1", "val$features1", "Ljava/util/List;")
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "size", "()I", True)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "java/lang/Math", "min", "(II)I", False)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "subList", "(II)Ljava/util/List;", True)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", True)
  mv.visitVarInsn(Opcodes.ASTORE, 2)
  l0 = Label()
  mv.visitLabel(l0)
  mv.visitFrame(Opcodes.F_APPEND,2, ["java/util/ArrayList", "java/util/Iterator"], 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", True)
  l1 = Label()
  mv.visitJumpInsn(Opcodes.IFEQ, l1)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", True)
  mv.visitTypeInsn(Opcodes.CHECKCAST, "my/ConstellationPlus")
  mv.visitVarInsn(Opcodes.ASTORE, 3)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_1", "val$features2", "Ljava/util/List;")
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", True)
  mv.visitVarInsn(Opcodes.ASTORE, 4)
  l2 = Label()
  mv.visitLabel(l2)
  mv.visitFrame(Opcodes.F_APPEND,2, ["my/ConstellationPlus", "java/util/Iterator"], 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 4)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", True)
  l3 = Label()
  mv.visitJumpInsn(Opcodes.IFEQ, l3)
  mv.visitVarInsn(Opcodes.ALOAD, 4)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", True)
  mv.visitTypeInsn(Opcodes.CHECKCAST, "my/ConstellationPlus")
  mv.visitVarInsn(Opcodes.ASTORE, 5)
  mv.visitVarInsn(Opcodes.ALOAD, 3)
  mv.visitVarInsn(Opcodes.ALOAD, 5)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_1", "val$angle_epsilon", "D")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_1", "val$len_epsilon_sq", "D")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_1", "val$comparison_type", "I")
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "my/ConstellationPlus", "matches", "(Lmy/ConstellationPlus;DDI)Z", False)
  l4 = Label()
  mv.visitJumpInsn(Opcodes.IFEQ, l4)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitTypeInsn(Opcodes.NEW, "mpicbg/models/PointMatch")
  mv.visitInsn(Opcodes.DUP)
  mv.visitVarInsn(Opcodes.ALOAD, 3)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "position", "Lmpicbg/models/Point;")
  mv.visitVarInsn(Opcodes.ALOAD, 5)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "position", "Lmpicbg/models/Point;")
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "mpicbg/models/PointMatch", "<init>", "(Lmpicbg/models/Point;Lmpicbg/models/Point;)V", False)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "java/util/ArrayList", "add", "(Ljava/lang/Object;)Z", False)
  mv.visitInsn(Opcodes.POP)
  mv.visitLabel(l4)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitJumpInsn(Opcodes.GOTO, l2)
  mv.visitLabel(l3)
  mv.visitFrame(Opcodes.F_CHOP,2, None, 0, None)
  mv.visitJumpInsn(Opcodes.GOTO, l0)
  mv.visitLabel(l1)
  mv.visitFrame(Opcodes.F_CHOP,1, None, 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitInsn(Opcodes.ARETURN)
  mv.visitMaxs(7, 6)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_BRIDGE + Opcodes.ACC_SYNTHETIC, "call", "()Ljava/lang/Object;", None, [ "java/lang/Exception" ])
  mv.visitCode()
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "my/PointMatchesPlus_1", "call", "()Ljava/util/ArrayList;", False)
  mv.visitInsn(Opcodes.ARETURN)
  mv.visitMaxs(1, 1)
  mv.visitEnd()
  
  cw.visitEnd()


  classloader.defineClass("my/PointMatchesPlus_1", cw.toByteArray())

  # subclass 2
  cw = ClassWriter(0)
  
  cw.visit(52, Opcodes.ACC_FINAL + Opcodes.ACC_SUPER, "my/PointMatchesPlus_2", "Ljava/lang/Object;Ljava/util/concurrent/Callable<Ljava/util/ArrayList<Lmpicbg/models/PointMatch;>;>;", "java/lang/Object", [ "java/util/concurrent/Callable" ])
  
  cw.visitOuterClass("my/PointMatchesPlus", "fromNearbyFeatures", "(DLjava/util/List;Ljava/util/List;DDII)Lmy/PointMatchesPlus;")
  
  cw.visitInnerClass("my/PointMatchesPlus_2", None, None, Opcodes.ACC_STATIC)
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$kdtree2", "Lnet/imglib2/KDTree;", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$features1", "Ljava/util/List;", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$offset", "I", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$inc", "I", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$radius", "D", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$angle_epsilon", "D", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$len_epsilon_sq", "D", None, None)
  fv.visitEnd()
  
  
  fv = cw.visitField(Opcodes.ACC_FINAL + Opcodes.ACC_SYNTHETIC, "val$comparison_type", "I", None, None)
  fv.visitEnd()
  
  
  mv = cw.visitMethod(0, "<init>", "(Lnet/imglib2/KDTree;Ljava/util/List;IIDDDI)V", None, None)
  mv.visitCode()
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_2", "val$kdtree2", "Lnet/imglib2/KDTree;")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_2", "val$features1", "Ljava/util/List;")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ILOAD, 3)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_2", "val$offset", "I")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ILOAD, 4)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_2", "val$inc", "I")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.DLOAD, 5)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_2", "val$radius", "D")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.DLOAD, 7)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_2", "val$angle_epsilon", "D")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.DLOAD, 9)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_2", "val$len_epsilon_sq", "D")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ILOAD, 11)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus_2", "val$comparison_type", "I")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/lang/Object", "<init>", "()V", False)
  mv.visitInsn(Opcodes.RETURN)
  mv.visitMaxs(3, 12)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL, "call", "()Ljava/util/ArrayList;", "()Ljava/util/ArrayList<Lmpicbg/models/PointMatch;>;", None)
  mv.visitCode()
  mv.visitTypeInsn(Opcodes.NEW, "java/util/ArrayList")
  mv.visitInsn(Opcodes.DUP)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", False)
  mv.visitVarInsn(Opcodes.ASTORE, 1)
  mv.visitTypeInsn(Opcodes.NEW, "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree")
  mv.visitInsn(Opcodes.DUP)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_2", "val$kdtree2", "Lnet/imglib2/KDTree;")
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", "<init>", "(Lnet/imglib2/KDTree;)V", False)
  mv.visitVarInsn(Opcodes.ASTORE, 2)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_2", "val$features1", "Ljava/util/List;")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_2", "val$offset", "I")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_2", "val$offset", "I")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_2", "val$inc", "I")
  mv.visitInsn(Opcodes.IADD)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_2", "val$features1", "Ljava/util/List;")
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "size", "()I", True)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "java/lang/Math", "min", "(II)I", False)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "subList", "(II)Ljava/util/List;", True)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", True)
  mv.visitVarInsn(Opcodes.ASTORE, 3)
  l0 = Label()
  mv.visitLabel(l0)
  mv.visitFrame(Opcodes.F_APPEND,3, ["java/util/ArrayList", "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", "java/util/Iterator"], 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 3)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", True)
  l1 = Label()
  mv.visitJumpInsn(Opcodes.IFEQ, l1)
  mv.visitVarInsn(Opcodes.ALOAD, 3)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", True)
  mv.visitTypeInsn(Opcodes.CHECKCAST, "my/ConstellationPlus")
  mv.visitVarInsn(Opcodes.ASTORE, 4)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitVarInsn(Opcodes.ALOAD, 4)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "position", "Lmpicbg/models/Point;")
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "mpicbg/models/Point", "getW", "()[D", False)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "net/imglib2/RealPoint", "wrap", "([D)Lnet/imglib2/RealPoint;", False)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_2", "val$radius", "D")
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", "search", "(Lnet/imglib2/RealLocalizable;DZ)V", False)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitVarInsn(Opcodes.ISTORE, 5)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", "numNeighbors", "()I", False)
  mv.visitVarInsn(Opcodes.ISTORE, 6)
  l2 = Label()
  mv.visitLabel(l2)
  mv.visitFrame(Opcodes.F_APPEND,3, ["my/ConstellationPlus", Opcodes.INTEGER, Opcodes.INTEGER], 0, None)
  mv.visitVarInsn(Opcodes.ILOAD, 5)
  mv.visitVarInsn(Opcodes.ILOAD, 6)
  l3 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPGE, l3)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitVarInsn(Opcodes.ILOAD, 5)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree", "getSampler", "(I)Lnet/imglib2/Sampler;", False)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "net/imglib2/Sampler", "get", "()Ljava/lang/Object;", True)
  mv.visitTypeInsn(Opcodes.CHECKCAST, "my/ConstellationPlus")
  mv.visitVarInsn(Opcodes.ASTORE, 7)
  mv.visitVarInsn(Opcodes.ALOAD, 4)
  mv.visitVarInsn(Opcodes.ALOAD, 7)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_2", "val$angle_epsilon", "D")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_2", "val$len_epsilon_sq", "D")
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/PointMatchesPlus_2", "val$comparison_type", "I")
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "my/ConstellationPlus", "matches", "(Lmy/ConstellationPlus;DDI)Z", False)
  l4 = Label()
  mv.visitJumpInsn(Opcodes.IFEQ, l4)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitTypeInsn(Opcodes.NEW, "mpicbg/models/PointMatch")
  mv.visitInsn(Opcodes.DUP)
  mv.visitVarInsn(Opcodes.ALOAD, 4)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "position", "Lmpicbg/models/Point;")
  mv.visitVarInsn(Opcodes.ALOAD, 7)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "position", "Lmpicbg/models/Point;")
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "mpicbg/models/PointMatch", "<init>", "(Lmpicbg/models/Point;Lmpicbg/models/Point;)V", False)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "java/util/ArrayList", "add", "(Ljava/lang/Object;)Z", False)
  mv.visitInsn(Opcodes.POP)
  mv.visitLabel(l4)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitIincInsn(5, 1)
  mv.visitJumpInsn(Opcodes.GOTO, l2)
  mv.visitLabel(l3)
  mv.visitFrame(Opcodes.F_CHOP,3, None, 0, None)
  mv.visitJumpInsn(Opcodes.GOTO, l0)
  mv.visitLabel(l1)
  mv.visitFrame(Opcodes.F_CHOP,1, None, 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitInsn(Opcodes.ARETURN)
  mv.visitMaxs(7, 8)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_BRIDGE + Opcodes.ACC_SYNTHETIC, "call", "()Ljava/lang/Object;", None, [ "java/lang/Exception" ])
  mv.visitCode()
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "my/PointMatchesPlus_2", "call", "()Ljava/util/ArrayList;", False)
  mv.visitInsn(Opcodes.ARETURN)
  mv.visitMaxs(1, 1)
  mv.visitEnd()
  
  cw.visitEnd()


  classloader.defineClass("my/PointMatchesPlus_2", cw.toByteArray())

  # PointMatchesPlus class (outer class)
  cw = ClassWriter(0)
  
  cw.visit(52, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER, "my/PointMatchesPlus", None, "java/lang/Object", None)
  
  cw.visitInnerClass("my/PointMatchesPlus_2", None, None, Opcodes.ACC_STATIC)
  
  cw.visitInnerClass("my/PointMatchesPlus_1", None, None, Opcodes.ACC_STATIC)
  
  
  fv = cw.visitField(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL, "pointmatches", "Ljava/util/List;", "Ljava/util/List<Lmpicbg/models/PointMatch;>;", None)
  fv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC, "<init>", "(Ljava/util/List;)V", "(Ljava/util/List<Lmpicbg/models/PointMatch;>;)V", None)
  mv.visitCode()
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/lang/Object", "<init>", "()V", False)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitFieldInsn(Opcodes.PUTFIELD, "my/PointMatchesPlus", "pointmatches", "Ljava/util/List;")
  mv.visitInsn(Opcodes.RETURN)
  mv.visitMaxs(2, 2)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_STATIC, "fromFeatures", "(Ljava/util/List;Ljava/util/List;DD)Lmy/PointMatchesPlus;", "(Ljava/util/List<Lmy/ConstellationPlus;>;Ljava/util/List<Lmy/ConstellationPlus;>;DD)Lmy/PointMatchesPlus;", [ "java/lang/Exception" ])
  mv.visitCode()
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitVarInsn(Opcodes.DLOAD, 2)
  mv.visitVarInsn(Opcodes.DLOAD, 4)
  mv.visitInsn(Opcodes.ICONST_3)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "my/PointMatchesPlus", "fromFeatures", "(Ljava/util/List;Ljava/util/List;DDII)Lmy/PointMatchesPlus;", False)
  mv.visitInsn(Opcodes.ARETURN)
  mv.visitMaxs(8, 6)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_STATIC, "fromFeaturesScaleInvariant", "(Ljava/util/List;Ljava/util/List;DD)Lmy/PointMatchesPlus;", "(Ljava/util/List<Lmy/ConstellationPlus;>;Ljava/util/List<Lmy/ConstellationPlus;>;DD)Lmy/PointMatchesPlus;", [ "java/lang/Exception" ])
  mv.visitCode()
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitVarInsn(Opcodes.DLOAD, 2)
  mv.visitVarInsn(Opcodes.DLOAD, 4)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "my/PointMatchesPlus", "fromFeatures", "(Ljava/util/List;Ljava/util/List;DDII)Lmy/PointMatchesPlus;", False)
  mv.visitInsn(Opcodes.ARETURN)
  mv.visitMaxs(8, 6)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_STATIC, "fromFeatures", "(Ljava/util/List;Ljava/util/List;DDII)Lmy/PointMatchesPlus;", "(Ljava/util/List<Lmy/ConstellationPlus;>;Ljava/util/List<Lmy/ConstellationPlus;>;DDII)Lmy/PointMatchesPlus;", [ "java/lang/Exception" ])
  mv.visitCode()
  l0 = Label()
  l1 = Label()
  l2 = Label()
  mv.visitTryCatchBlock(l0, l1, l2, None)
  l3 = Label()
  mv.visitTryCatchBlock(l2, l3, l2, None)
  mv.visitTypeInsn(Opcodes.NEW, "java/util/ArrayList")
  mv.visitInsn(Opcodes.DUP)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", False)
  mv.visitVarInsn(Opcodes.ASTORE, 8)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "size", "()I", True)
  mv.visitVarInsn(Opcodes.ILOAD, 7)
  mv.visitInsn(Opcodes.IDIV)
  mv.visitVarInsn(Opcodes.ISTORE, 9)
  mv.visitVarInsn(Opcodes.ILOAD, 7)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "java/util/concurrent/Executors", "newFixedThreadPool", "(I)Ljava/util/concurrent/ExecutorService;", False)
  mv.visitVarInsn(Opcodes.ASTORE, 10)
  mv.visitLabel(l0)
  mv.visitTypeInsn(Opcodes.NEW, "java/util/ArrayList")
  mv.visitInsn(Opcodes.DUP)
  mv.visitVarInsn(Opcodes.ILOAD, 7)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/util/ArrayList", "<init>", "(I)V", False)
  mv.visitVarInsn(Opcodes.ASTORE, 11)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitVarInsn(Opcodes.ISTORE, 12)
  l4 = Label()
  mv.visitLabel(l4)
  mv.visitFrame(Opcodes.F_FULL, 11, ["java/util/List", "java/util/List", Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.INTEGER, Opcodes.INTEGER, "java/util/ArrayList", Opcodes.INTEGER, "java/util/concurrent/ExecutorService", "java/util/ArrayList", Opcodes.INTEGER], 0, [])
  mv.visitVarInsn(Opcodes.ILOAD, 12)
  mv.visitVarInsn(Opcodes.ILOAD, 7)
  l5 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPGT, l5)
  mv.visitVarInsn(Opcodes.ILOAD, 12)
  mv.visitVarInsn(Opcodes.ILOAD, 9)
  mv.visitInsn(Opcodes.IMUL)
  mv.visitVarInsn(Opcodes.ISTORE, 13)
  mv.visitVarInsn(Opcodes.ILOAD, 13)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "size", "()I", True)
  l6 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPLT, l6)
  mv.visitJumpInsn(Opcodes.GOTO, l5)
  mv.visitLabel(l6)
  mv.visitFrame(Opcodes.F_APPEND,1, [Opcodes.INTEGER], 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 11)
  mv.visitVarInsn(Opcodes.ALOAD, 10)
  mv.visitTypeInsn(Opcodes.NEW, "my/PointMatchesPlus_1")
  mv.visitInsn(Opcodes.DUP)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitVarInsn(Opcodes.ILOAD, 13)
  mv.visitVarInsn(Opcodes.ILOAD, 9)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitVarInsn(Opcodes.DLOAD, 2)
  mv.visitVarInsn(Opcodes.DLOAD, 4)
  mv.visitVarInsn(Opcodes.ILOAD, 6)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "my/PointMatchesPlus_1", "<init>", "(Ljava/util/List;IILjava/util/List;DDI)V", False)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/concurrent/ExecutorService", "submit", "(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;", True)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "java/util/ArrayList", "add", "(Ljava/lang/Object;)Z", False)
  mv.visitInsn(Opcodes.POP)
  mv.visitIincInsn(12, 1)
  mv.visitJumpInsn(Opcodes.GOTO, l4)
  mv.visitLabel(l5)
  mv.visitFrame(Opcodes.F_CHOP,2, None, 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 11)
  mv.visitVarInsn(Opcodes.ALOAD, 8)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "my/PointMatchesPlus", "uniquePointMatches", "(Ljava/util/List;Ljava/util/List;)V", False)
  mv.visitLabel(l1)
  mv.visitVarInsn(Opcodes.ALOAD, 10)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/concurrent/ExecutorService", "shutdown", "()V", True)
  l7 = Label()
  mv.visitJumpInsn(Opcodes.GOTO, l7)
  mv.visitLabel(l2)
  mv.visitFrame(Opcodes.F_FULL, 9, ["java/util/List", "java/util/List", Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.INTEGER, Opcodes.INTEGER, "java/util/ArrayList", Opcodes.INTEGER, "java/util/concurrent/ExecutorService"], 1, ["java/lang/Throwable"])
  mv.visitVarInsn(Opcodes.ASTORE, 14)
  mv.visitLabel(l3)
  mv.visitVarInsn(Opcodes.ALOAD, 10)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/concurrent/ExecutorService", "shutdown", "()V", True)
  mv.visitVarInsn(Opcodes.ALOAD, 14)
  mv.visitInsn(Opcodes.ATHROW)
  mv.visitLabel(l7)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitTypeInsn(Opcodes.NEW, "my/PointMatchesPlus")
  mv.visitInsn(Opcodes.DUP)
  mv.visitVarInsn(Opcodes.ALOAD, 8)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "my/PointMatchesPlus", "<init>", "(Ljava/util/List;)V", False)
  mv.visitInsn(Opcodes.ARETURN)
  mv.visitMaxs(13, 15)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PRIVATE + Opcodes.ACC_FINAL + Opcodes.ACC_STATIC, "uniquePointMatches", "(Ljava/util/List;Ljava/util/List;)V", "(Ljava/util/List<Ljava/util/concurrent/Future<Ljava/util/ArrayList<Lmpicbg/models/PointMatch;>;>;>;Ljava/util/List<Lmpicbg/models/PointMatch;>;)V", [ "java/lang/Exception" ])
  mv.visitCode()
  mv.visitTypeInsn(Opcodes.NEW, "java/util/HashMap")
  mv.visitInsn(Opcodes.DUP)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", False)
  mv.visitVarInsn(Opcodes.ASTORE, 2)
  mv.visitVarInsn(Opcodes.ALOAD, 0)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", True)
  mv.visitVarInsn(Opcodes.ASTORE, 3)
  l0 = Label()
  mv.visitLabel(l0)
  mv.visitFrame(Opcodes.F_APPEND,2, ["java/util/HashMap", "java/util/Iterator"], 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 3)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", True)
  l1 = Label()
  mv.visitJumpInsn(Opcodes.IFEQ, l1)
  mv.visitVarInsn(Opcodes.ALOAD, 3)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", True)
  mv.visitTypeInsn(Opcodes.CHECKCAST, "java/util/concurrent/Future")
  mv.visitVarInsn(Opcodes.ASTORE, 4)
  mv.visitVarInsn(Opcodes.ALOAD, 4)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/concurrent/Future", "get", "()Ljava/lang/Object;", True)
  mv.visitTypeInsn(Opcodes.CHECKCAST, "java/util/ArrayList")
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "java/util/ArrayList", "iterator", "()Ljava/util/Iterator;", False)
  mv.visitVarInsn(Opcodes.ASTORE, 5)
  l2 = Label()
  mv.visitLabel(l2)
  mv.visitFrame(Opcodes.F_APPEND,2, ["java/util/concurrent/Future", "java/util/Iterator"], 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 5)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", True)
  l3 = Label()
  mv.visitJumpInsn(Opcodes.IFEQ, l3)
  mv.visitVarInsn(Opcodes.ALOAD, 5)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", True)
  mv.visitTypeInsn(Opcodes.CHECKCAST, "mpicbg/models/PointMatch")
  mv.visitVarInsn(Opcodes.ASTORE, 6)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitVarInsn(Opcodes.ALOAD, 6)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "mpicbg/models/PointMatch", "getP1", "()Lmpicbg/models/Point;", False)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "java/util/HashMap", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", False)
  mv.visitTypeInsn(Opcodes.CHECKCAST, "java/util/HashSet")
  mv.visitVarInsn(Opcodes.ASTORE, 7)
  mv.visitInsn(Opcodes.ACONST_NULL)
  mv.visitVarInsn(Opcodes.ALOAD, 7)
  l4 = Label()
  mv.visitJumpInsn(Opcodes.IF_ACMPNE, l4)
  mv.visitTypeInsn(Opcodes.NEW, "java/util/HashSet")
  mv.visitInsn(Opcodes.DUP)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/util/HashSet", "<init>", "()V", False)
  mv.visitVarInsn(Opcodes.ASTORE, 7)
  mv.visitVarInsn(Opcodes.ALOAD, 7)
  mv.visitVarInsn(Opcodes.ALOAD, 6)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "mpicbg/models/PointMatch", "getP2", "()Lmpicbg/models/Point;", False)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "java/util/HashSet", "add", "(Ljava/lang/Object;)Z", False)
  mv.visitInsn(Opcodes.POP)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitVarInsn(Opcodes.ALOAD, 6)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "mpicbg/models/PointMatch", "getP1", "()Lmpicbg/models/Point;", False)
  mv.visitVarInsn(Opcodes.ALOAD, 7)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "java/util/HashMap", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", False)
  mv.visitInsn(Opcodes.POP)
  l5 = Label()
  mv.visitJumpInsn(Opcodes.GOTO, l5)
  mv.visitLabel(l4)
  mv.visitFrame(Opcodes.F_APPEND,2, ["mpicbg/models/PointMatch", "java/util/HashSet"], 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 7)
  mv.visitVarInsn(Opcodes.ALOAD, 6)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "mpicbg/models/PointMatch", "getP2", "()Lmpicbg/models/Point;", False)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "java/util/HashSet", "contains", "(Ljava/lang/Object;)Z", False)
  l6 = Label()
  mv.visitJumpInsn(Opcodes.IFEQ, l6)
  mv.visitJumpInsn(Opcodes.GOTO, l2)
  mv.visitLabel(l6)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 7)
  mv.visitVarInsn(Opcodes.ALOAD, 6)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "mpicbg/models/PointMatch", "getP2", "()Lmpicbg/models/Point;", False)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "java/util/HashSet", "add", "(Ljava/lang/Object;)Z", False)
  mv.visitInsn(Opcodes.POP)
  mv.visitLabel(l5)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 1)
  mv.visitVarInsn(Opcodes.ALOAD, 6)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", True)
  mv.visitInsn(Opcodes.POP)
  mv.visitJumpInsn(Opcodes.GOTO, l2)
  mv.visitLabel(l3)
  mv.visitFrame(Opcodes.F_FULL, 4, ["java/util/List", "java/util/List", "java/util/HashMap", "java/util/Iterator"], 0, [])
  mv.visitJumpInsn(Opcodes.GOTO, l0)
  mv.visitLabel(l1)
  mv.visitFrame(Opcodes.F_CHOP,1, None, 0, None)
  mv.visitInsn(Opcodes.RETURN)
  mv.visitMaxs(3, 8)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_STATIC, "fromNearbyFeatures", "(DLjava/util/List;Ljava/util/List;DD)Lmy/PointMatchesPlus;", "(DLjava/util/List<Lmy/ConstellationPlus;>;Ljava/util/List<Lmy/ConstellationPlus;>;DD)Lmy/PointMatchesPlus;", [ "java/lang/Exception" ])
  mv.visitCode()
  mv.visitVarInsn(Opcodes.DLOAD, 0)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitVarInsn(Opcodes.ALOAD, 3)
  mv.visitVarInsn(Opcodes.DLOAD, 4)
  mv.visitVarInsn(Opcodes.DLOAD, 6)
  mv.visitInsn(Opcodes.ICONST_3)
  mv.visitInsn(Opcodes.ICONST_1)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "my/PointMatchesPlus", "fromNearbyFeatures", "(DLjava/util/List;Ljava/util/List;DDII)Lmy/PointMatchesPlus;", False)
  mv.visitInsn(Opcodes.ARETURN)
  mv.visitMaxs(10, 8)
  mv.visitEnd()
  
  
  mv = cw.visitMethod(Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_STATIC, "fromNearbyFeatures", "(DLjava/util/List;Ljava/util/List;DDII)Lmy/PointMatchesPlus;", "(DLjava/util/List<Lmy/ConstellationPlus;>;Ljava/util/List<Lmy/ConstellationPlus;>;DDII)Lmy/PointMatchesPlus;", [ "java/lang/Exception" ])
  mv.visitCode()
  l0 = Label()
  l1 = Label()
  l2 = Label()
  mv.visitTryCatchBlock(l0, l1, l2, None)
  l3 = Label()
  mv.visitTryCatchBlock(l2, l3, l2, None)
  mv.visitTypeInsn(Opcodes.NEW, "java/util/ArrayList")
  mv.visitInsn(Opcodes.DUP)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", False)
  mv.visitVarInsn(Opcodes.ASTORE, 10)
  mv.visitVarInsn(Opcodes.ALOAD, 3)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", True)
  mv.visitVarInsn(Opcodes.ASTORE, 11)
  l4 = Label()
  mv.visitLabel(l4)
  mv.visitFrame(Opcodes.F_APPEND,2, ["java/util/List", "java/util/Iterator"], 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 11)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", True)
  l5 = Label()
  mv.visitJumpInsn(Opcodes.IFEQ, l5)
  mv.visitVarInsn(Opcodes.ALOAD, 11)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", True)
  mv.visitTypeInsn(Opcodes.CHECKCAST, "my/ConstellationPlus")
  mv.visitVarInsn(Opcodes.ASTORE, 12)
  mv.visitVarInsn(Opcodes.ALOAD, 10)
  mv.visitVarInsn(Opcodes.ALOAD, 12)
  mv.visitFieldInsn(Opcodes.GETFIELD, "my/ConstellationPlus", "position", "Lmpicbg/models/Point;")
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "mpicbg/models/Point", "getW", "()[D", False)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "net/imglib2/RealPoint", "wrap", "([D)Lnet/imglib2/RealPoint;", False)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", True)
  mv.visitInsn(Opcodes.POP)
  mv.visitJumpInsn(Opcodes.GOTO, l4)
  mv.visitLabel(l5)
  mv.visitFrame(Opcodes.F_CHOP,1, None, 0, None)
  mv.visitTypeInsn(Opcodes.NEW, "net/imglib2/KDTree")
  mv.visitInsn(Opcodes.DUP)
  mv.visitVarInsn(Opcodes.ALOAD, 3)
  mv.visitVarInsn(Opcodes.ALOAD, 10)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "net/imglib2/KDTree", "<init>", "(Ljava/util/List;Ljava/util/List;)V", False)
  mv.visitVarInsn(Opcodes.ASTORE, 11)
  mv.visitTypeInsn(Opcodes.NEW, "java/util/ArrayList")
  mv.visitInsn(Opcodes.DUP)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", False)
  mv.visitVarInsn(Opcodes.ASTORE, 12)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "size", "()I", True)
  mv.visitVarInsn(Opcodes.ILOAD, 9)
  mv.visitInsn(Opcodes.IDIV)
  mv.visitVarInsn(Opcodes.ISTORE, 13)
  mv.visitVarInsn(Opcodes.ILOAD, 9)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "java/util/concurrent/Executors", "newFixedThreadPool", "(I)Ljava/util/concurrent/ExecutorService;", False)
  mv.visitVarInsn(Opcodes.ASTORE, 14)
  mv.visitLabel(l0)
  mv.visitTypeInsn(Opcodes.NEW, "java/util/ArrayList")
  mv.visitInsn(Opcodes.DUP)
  mv.visitVarInsn(Opcodes.ILOAD, 9)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "java/util/ArrayList", "<init>", "(I)V", False)
  mv.visitVarInsn(Opcodes.ASTORE, 15)
  mv.visitInsn(Opcodes.ICONST_0)
  mv.visitVarInsn(Opcodes.ISTORE, 16)
  l6 = Label()
  mv.visitLabel(l6)
  mv.visitFrame(Opcodes.F_FULL, 14, [Opcodes.DOUBLE, "java/util/List", "java/util/List", Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.INTEGER, Opcodes.INTEGER, "java/util/List", "net/imglib2/KDTree", "java/util/List", Opcodes.INTEGER, "java/util/concurrent/ExecutorService", "java/util/ArrayList", Opcodes.INTEGER], 0, [])
  mv.visitVarInsn(Opcodes.ILOAD, 16)
  mv.visitVarInsn(Opcodes.ILOAD, 9)
  l7 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPGT, l7)
  mv.visitVarInsn(Opcodes.ILOAD, 16)
  mv.visitVarInsn(Opcodes.ILOAD, 13)
  mv.visitInsn(Opcodes.IMUL)
  mv.visitVarInsn(Opcodes.ISTORE, 17)
  mv.visitVarInsn(Opcodes.ILOAD, 17)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/List", "size", "()I", True)
  l8 = Label()
  mv.visitJumpInsn(Opcodes.IF_ICMPLT, l8)
  mv.visitJumpInsn(Opcodes.GOTO, l7)
  mv.visitLabel(l8)
  mv.visitFrame(Opcodes.F_APPEND,1, [Opcodes.INTEGER], 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 15)
  mv.visitVarInsn(Opcodes.ALOAD, 14)
  mv.visitTypeInsn(Opcodes.NEW, "my/PointMatchesPlus_2")
  mv.visitInsn(Opcodes.DUP)
  mv.visitVarInsn(Opcodes.ALOAD, 11)
  mv.visitVarInsn(Opcodes.ALOAD, 2)
  mv.visitVarInsn(Opcodes.ILOAD, 17)
  mv.visitVarInsn(Opcodes.ILOAD, 13)
  mv.visitVarInsn(Opcodes.DLOAD, 0)
  mv.visitVarInsn(Opcodes.DLOAD, 4)
  mv.visitVarInsn(Opcodes.DLOAD, 6)
  mv.visitVarInsn(Opcodes.ILOAD, 8)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "my/PointMatchesPlus_2", "<init>", "(Lnet/imglib2/KDTree;Ljava/util/List;IIDDDI)V", False)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/concurrent/ExecutorService", "submit", "(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;", True)
  mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, "java/util/ArrayList", "add", "(Ljava/lang/Object;)Z", False)
  mv.visitInsn(Opcodes.POP)
  mv.visitIincInsn(16, 1)
  mv.visitJumpInsn(Opcodes.GOTO, l6)
  mv.visitLabel(l7)
  mv.visitFrame(Opcodes.F_CHOP,2, None, 0, None)
  mv.visitVarInsn(Opcodes.ALOAD, 15)
  mv.visitVarInsn(Opcodes.ALOAD, 12)
  mv.visitMethodInsn(Opcodes.INVOKESTATIC, "my/PointMatchesPlus", "uniquePointMatches", "(Ljava/util/List;Ljava/util/List;)V", False)
  mv.visitLabel(l1)
  mv.visitVarInsn(Opcodes.ALOAD, 14)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/concurrent/ExecutorService", "shutdown", "()V", True)
  l9 = Label()
  mv.visitJumpInsn(Opcodes.GOTO, l9)
  mv.visitLabel(l2)
  mv.visitFrame(Opcodes.F_FULL, 12, [Opcodes.DOUBLE, "java/util/List", "java/util/List", Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.INTEGER, Opcodes.INTEGER, "java/util/List", "net/imglib2/KDTree", "java/util/List", Opcodes.INTEGER, "java/util/concurrent/ExecutorService"], 1, ["java/lang/Throwable"])
  mv.visitVarInsn(Opcodes.ASTORE, 18)
  mv.visitLabel(l3)
  mv.visitVarInsn(Opcodes.ALOAD, 14)
  mv.visitMethodInsn(Opcodes.INVOKEINTERFACE, "java/util/concurrent/ExecutorService", "shutdown", "()V", True)
  mv.visitVarInsn(Opcodes.ALOAD, 18)
  mv.visitInsn(Opcodes.ATHROW)
  mv.visitLabel(l9)
  mv.visitFrame(Opcodes.F_SAME, 0, None, 0, None)
  mv.visitTypeInsn(Opcodes.NEW, "my/PointMatchesPlus")
  mv.visitInsn(Opcodes.DUP)
  mv.visitVarInsn(Opcodes.ALOAD, 12)
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL, "my/PointMatchesPlus", "<init>", "(Ljava/util/List;)V", False)
  mv.visitInsn(Opcodes.ARETURN)
  mv.visitMaxs(15, 19)
  mv.visitEnd()
  
  cw.visitEnd()


  class_PointMatchesPlus = classloader.defineClass("my/PointMatchesPlus", cw.toByteArray())

  return class_PointMatchesPlus


def initNativeClasses():
  classloader = CustomClassLoader()
  ConstellationPlus = createNativeConstellationPlusClass(classloader=classloader)
  PointMatchesPlus = createNativePointMatchesPlusClass(classloader=classloader)
  return ConstellationPlus, PointMatchesPlus